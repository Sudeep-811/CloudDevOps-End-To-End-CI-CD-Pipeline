name: Fully Automated Infra + App Deployment

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-south-1
  ECR_REPOSITORY: jokes-app
  ECS_CLUSTER: jokes-cluster
  ECS_SERVICE: jokes-service
  CONTAINER_NAME: jokes-app

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    ######################################
    # STEP 1: Run Terraform - Bootstrap
    ######################################
    - name: Terraform Init (Bootstrap Infra)
      run: |
        cd "Infrastructure/Infra Bootstrap"
        terraform init

    - name: Terraform Apply (Bootstrap Infra)
      run: |
        cd "Infrastructure/Infra Bootstrap"
        terraform apply -auto-approve

    ######################################
    # STEP 2: Run Terraform - Main Infra
    ######################################
    - name: Terraform Init (Main Infra)
      run: |
        cd "Infrastructure/Main Infra.Terraform"
        terraform init

    - name: Terraform Apply (Main Infra)
      run: |
        cd "Infrastructure/Main Infra.Terraform"
        terraform apply -auto-approve

    ######################################
    # STEP 3: Build and Push Docker Image
    ######################################
    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, Tag, and Push Docker Image
      run: |
        IMAGE_URI="${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest"
        echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV
        cd "Web-App (Jokes Site)"
        docker build -t $IMAGE_URI "./Web-App (Jokes Site)"   
        docker push $IMAGE_URI

    ######################################
    # STEP 4: Update ECS Service
    ######################################
    - name: Update ECS Service
      run: |
        aws ecs update-service \
          --cluster ${{ env.ECS_CLUSTER }} \
          --service ${{ env.ECS_SERVICE }} \
          --force-new-deployment
